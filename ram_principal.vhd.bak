library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;


entity ram_principal is

port( dado			  		:  in  std_logic_vector(15 downto 0);
		saida		    		:	out std_logic_vector(15 downto 0);
		endereco      		:  in  std_logic_vector(2 downto 0);
		enable_w, enable  :  in  std_logic);

		end ram_principal;


architecture hardware of ram_principal is
 
	type MEM_ROM is array (0 to 20-1) of std_logic_vector(15 downto 0 );

  --type      arranjo_memoria is array (natural range <>) of unsigned(7 downto 0);
  	
	signal  PRIN_MEM: MEM_ROM (0 to 20-1):= (PRIN_MEM_v(0) := "0001000000001000","0011000000101000","0010000000001000",
	"0000000000000000" ,"0000000000000000" ,"0000000000000000","0000000000000000","0000000000000000","0000000000110000",
	"0000000000000000", "0000000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000",
	"0000000000000000" ,"0000000000000000","0000000000000000","0000000000000000", "0000000000000000");
	
	type  arranjo_memoria  is array(0 to 7) of unsigned(3 downto 0);
	signal memoria : arranjo_memoria;
  
begin

  process(ce, endereco)
  begin
  
	 if rising_edge(ce) then -- dado armazenado na subida de "ce" com "we=0"
	  if we = '0' then memoria(to_integer(endereco)) <= dado_entrada;
	  end if;
	 end if;
	 
  end process;
  
  dado_saida <= memoria(to_integer(endereco));
  
end hardware;
